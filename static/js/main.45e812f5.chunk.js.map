{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","today","clockName","className","toUTCString","slice","getRandomName","value","Date","now","toString","App","useState","setClockName","setToday","isHidden","setIsHidden","useEffect","timerId","window","setInterval","console","info","clearInterval","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"kKAKaA,EAAyB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC9C,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAEF,YACD,sBAAMC,UAAU,cAAhB,SACGF,EAAMG,cAAcC,OAAO,IAAK,SCTzC,SAASC,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWL,OAAO,GAE3C,MAAM,SAAN,OAAgBE,GAGX,IAAMI,EAAgB,WAC3B,MAAkCC,mBAAS,WAA3C,mBAAOV,EAAP,KAAkBW,EAAlB,KACA,EAA0BD,mBAAS,IAAIJ,MAAvC,mBAAOP,EAAP,KAAca,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAsCA,OApCAC,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjCN,EAAS,IAAIN,MAGba,QAAQC,MAAK,IAAId,MAAOJ,cAAcC,OAAO,IAAK,MACjD,KAEH,OAAO,WACLc,OAAOI,cAAcL,MAEtB,CAACjB,IAEJgB,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjCP,EAAaP,KAGbe,QAAQC,KAAKhB,OACZ,MAEH,OAAO,WACLa,OAAOI,cAAcL,MAEtB,CAAChB,IAEJsB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAENX,GAAY,MAGdQ,SAASC,iBAAiB,SAAS,WACjCT,GAAY,MAIZ,sBAAKb,UAAU,MAAf,UACE,6CAECY,GACC,cAAC,EAAD,CAAOd,MAAOA,EAAOC,UAAWA,QCrDxC0B,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,U","file":"static/js/main.45e812f5.chunk.js","sourcesContent":["type Props = {\n  today: Date;\n  clockName: string;\n};\n\nexport const Clock: React.FC<Props> = ({ today, clockName }) => {\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n      {' time is '}\n      <span className=\"Clock__time\">\n        {today.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('Clock-0');\n  const [today, setToday] = useState(new Date());\n  const [isHidden, setIsHidden] = useState(true);\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setToday(new Date());\n\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, [today]);\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n\n      // eslint-disable-next-line no-console\n      console.info(getRandomName());\n    }, 3300);\n\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, [clockName]);\n\n  document.addEventListener('contextmenu', (event: MouseEvent) => {\n    event.preventDefault();\n\n    setIsHidden(false);\n  });\n\n  document.addEventListener('click', () => {\n    setIsHidden(true);\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      {isHidden && (\n        <Clock today={today} clockName={clockName} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}