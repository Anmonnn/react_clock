{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockName","today","Date","timerId2","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","newClockName","value","now","toString","getRandomName","debug","clearInterval","className","Component","App","isHidden","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAQO,IAAMA,EAAb,4MACEC,MAAQ,CACNC,UAAW,UACXC,MAAO,IAAIC,MAHf,EAMEC,SAAW,EANb,EAQEC,QAAU,EARZ,uDAUE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,MAAO,IAAIC,OAG3BO,QAAQC,MAAK,IAAIR,MAAOS,cAAcC,OAAO,IAAK,MACjD,KAEHP,KAAKF,SAAWG,OAAOC,aAAY,WACjC,IAAMM,EAzBZ,WACE,IAAMC,EAAQZ,KAAKa,MAAMC,WAAWJ,OAAO,GAE3C,MAAM,SAAN,OAAgBE,GAsBSG,GAGrBR,QAAQS,MAAR,uBAA8B,EAAKnB,MAAMC,UAAzC,eAAyDa,IACzD,EAAKL,SAAS,CAAER,UAAWa,MAC1B,QAxBP,kCA2BE,WACEP,OAAOa,cAAcd,KAAKD,SAC1BE,OAAOa,cAAcd,KAAKF,YA7B9B,oBAgCE,WACE,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,KAAKN,MAAMC,YAEb,YACD,sBAAMoB,UAAU,cAAhB,SACGf,KAAKN,MAAME,MAAMU,cAAcC,OAAO,IAAK,YAxCtD,GAA2BS,aCJdC,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,GAFd,EAgBEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKlB,SAAS,CAAEe,UAAU,KAlB9B,EAqBEI,YAAc,WACZ,EAAKnB,SAAS,CAAEe,UAAU,KAtB9B,uDAKE,WACEK,SAASC,iBAAiB,cAAexB,KAAKmB,mBAE9CI,SAASC,iBAAiB,QAASxB,KAAKsB,eAR5C,kCAWE,WACEC,SAASE,oBAAoB,cAAezB,KAAKmB,mBACjDI,SAASE,oBAAoB,QAASzB,KAAKsB,eAb/C,oBAyBE,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECf,KAAKN,MAAMwB,UACV,cAAC,EAAD,WA/BV,GAAyBF,aCDzBU,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.665a9315.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class Clock extends Component {\n  state = {\n    clockName: 'Clock-0',\n    today: new Date(),\n  };\n\n  timerId2 = 0;\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    this.timerId2 = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${this.state.clockName} to ${newClockName}`);\n      this.setState({ clockName: newClockName });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    window.clearInterval(this.timerId2);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.state.clockName}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nexport class App extends Component {\n  state = {\n    isHidden: true,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ isHidden: false });\n  };\n\n  handleClick = () => {\n    this.setState({ isHidden: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.isHidden && (\n          <Clock />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}